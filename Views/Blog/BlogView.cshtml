@using AlphaBlogging.Models;
@model AlphaBlogging.Models.Blog

@{
    ViewData["Title"] = "BlogView";
    Layout = "~/Views/Admin/_AdminLayout.cshtml";
}

<div class="container-fluid px-4">
    <br />

<h1>@Html.DisplayFor(model => model.Title)</h1>
<span>
    Blog Id: 
    <small class="text-muted">@Html.DisplayFor(model => model.Id)</small>, 
    Author: 
    <small class="text-muted">@Html.DisplayFor(model => model.Author.UserName)</small>, 
    Created: 
    <small class="text-muted">@Html.DisplayFor(model => model.Created)</small>, 
    Latest Update: 
    <small class="text-muted">@Html.DisplayFor(model => model.Updated)</small>
</span>
<hr />
<figure class="text-center">
  <blockquote class="blockquote">
    <p>@Html.DisplayFor(model => model.Body)</p>
  </blockquote>
  <figcaption class="blockquote-footer">
    Blog declaration by: <cite title="Source Author"><i class="fa-regular fa-user"></i>@Html.DisplayFor(model => model.Author.UserName)</cite>
  </figcaption>
</figure>


<div>
<a href="@Url.Action("Edit", "Blog", new {id=@Model.Id} )" class="btn btn-secondary btn-sm"><i class="far fa-edit"></i> Edit Blog Info</a>    
</div>
<br />
<hr />

@*<h1>BlogView</h1>
<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Updated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Updated)
        </dd>
        <dd class = "col-sm-10">
            @Html.ActionLink("Edit", "Edit", new { id=@Model.Id }) |
                <a asp-controller="Blog" asp-action="Edit" asp-route-id="@Model.Id">
                
            </a>
        </dd>
    </dl>
</div>
*@

<div>
<a href="@Url.Action("Create", "Post", new {blogId = Model.Id} )" class="btn btn-secondary btn-sm"><i class="fas fa-plus"></i> Add Post</a>
    @*@Html.ActionLink("Add Post", "Create", "Post", new {blogId = Model.Id} ) *@
</div>
<br />


<div>
   
    @{ if (Model.Posts != null && Model.Posts.Count() > 0)
        {       
            foreach (var post in Model.Posts.Reverse())
            {
                <div class="container p-3 my-3 text-black" style="background-color:beige">
                @*<div style="border-color:black; margin-block:7px; background-color:beige">*@                       
                 
                     @Html.ActionLink("Add a Comment", "Create", "Comment", new {postId = post.Id} )
                     @Html.ActionLink("Edit this Post", "Edit", "Post", new {id = post.Id, blogId = post.BlogId} )              
                     @Html.ActionLink("Remove this Post", "Remove", "Post", new {id = post.Id, blogId = post.BlogId} )

                     <partial name="_Post"  model="post" /> 
                 </div>  
                <hr />           
            }

        }
        else
        {
            <h6>No posts yet</h6>
            // Attempting to use mClass here will result in NullReferenceException
        }
    }
</div>




@*<div>
    @Html.ActionLink("Add post", "Create", "Post", new { blogid = Model.Id }) |
    <a asp-action="MyBloglist">Back to List</a>
</div>*@

</div>
