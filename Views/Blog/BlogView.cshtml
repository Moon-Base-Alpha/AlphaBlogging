@using AlphaBlogging.Models;
@model AlphaBlogging.Models.Blog

@{
    ViewData["Title"] = "BlogView";

    if (Model.Author.UserName == User.Identity.Name /*User.IsInRole("Admin")||User.IsInRole("Author")*/)
    {
        Layout = "~/Views/Admin/_AdminLayout.cshtml";
    }
}
<div class="postcontainer pb-3 row">
    <div class="container-fluid px-4 col-sm-10">
        <br />
        <div class="jumbotron text-center text-sh bg-dark" style="display:flex; flex-direction:column; justify-content:space-between; min-height:250px; background-image: url('../../image/@Model.BlogImage'); background-size: cover;">
            @*<img src="~/image/@Model.BlogImage"  class="mb-4" />*@
            <div>
            <h1 style=" text-shadow: 2px 2px 2px #000;">@Html.DisplayFor(model => model.Title)</h1>
            </div>
            <div style="bottom:0; ">
                @* Blog Id:
                    <small class="text-muted">@Html.DisplayFor(model => model.Id)</small>, *@
                <p class="m-0 font-italic">A blog by @Model.Author.UserName</p>
                @*<small class="text-light">@Html.DisplayFor(model => model.Author.UserName)</small>, *@
                <small class="text-light">Created:  @Model.Created.ToString("yyyy/MM/dd") | 
                Latest Update:  @Model.Updated.ToString("yyyy/MM/dd")</small>
            </div>
        </div>
        <hr />
        <figure class="text-center p-1 ">
            <blockquote class="blockquote">
                <p>@Html.DisplayFor(model => model.Body)</p>
            </blockquote>
            <figcaption class="blockquote-footer">
                Blog declaration by: <cite title="Source Author"><i class="fa-regular fa-user"></i>@Html.DisplayFor(model => model.Author.UserName)</cite>
            </figcaption>
        </figure>

        @if (Model.Author.UserName == User.Identity.Name)
        {
            <div>
                <a href="@Url.Action("Edit", "Blog", new {id=@Model.Id} )" class="btn btn-secondary btn-sm"><i class="far fa-edit"></i> Edit Blog Info</a>
            </div>
        }

       
        <hr />


        @if (Model.Author.UserName == User.Identity.Name)
        {
            <div>

                <a href="@Url.Action("Create", "Post", new {blogId = Model.Id} )" class="btn btn-secondary btn-sm"><i class="fas fa-plus"></i> Add Post</a>
                @*@Html.ActionLink("Add Post", "Create", "Post", new {blogId = Model.Id} ) *@
            </div>
        }
        <div>
            @{
                if (Model.Posts != null && Model.Posts.Count() > 0)
                {
                    foreach (var post in Model.Posts.Reverse())
                    {
                        <div class="postcontainer mb-0 mb-3 p-3">
                            @*<div style="border-color:black; margin-block:7px; background-color:beige">*@

                            @if (Model.Author.UserName == User.Identity.Name)
                            {
                            @Html.ActionLink("Edit this Post", "Edit", "Post", new {id = post.Id} ) <span>|</span>  
                            @Html.ActionLink("Remove this Post", "Remove", "Post", new {id = post.Id, blogId = post.BlogId})
                            }
                            else
                            {

                            }

                            <partial name="_Post" model="post" />
                             @if (User.IsInRole("Admin") || User.IsInRole("Superadmin") || User.IsInRole("Author"))
                            @Html.ActionLink("Add a Comment", "Create", "Comment", new {postId = post.Id} )

                        </div>
                    }

                }
                else
                {
                    <h6>No posts yet</h6>
                    // Attempting to use mClass here will result in NullReferenceException
                }
            }
        </div>

        @*<div>
            @Html.ActionLink("Add post", "Create", "Post", new { blogid = Model.Id }) |
            <a asp-action="MyBloglist">Back to List</a>
            </div>*@
    </div>
    <div  class="container-fluid px-0 bg-dark bg-opacity-50 col-sm-2"> <partial name="PostArchive" /> </div>
</div>

    <script>

        
        function UserclicksOnLikeJS(PostIDfromPage)
        {
                $.ajax({
                    url: '@Url.Action("UserClicksOnLike", "Post")',
                    data: {Id:PostIDfromPage},
                    dataType: 'json',
                    //data is the return value from the PostController method
                    success: function(data) 
                    {
                        var target = "LikesID" + data.postid;
                        console.log("Response: " + "["+data.nofLikes+","+data.postid+"]");
                        console.log("altering this element: " + document.getElementById(target).outerHTML) + "to a lieks number of " + data.nofLikes;
                        
                        document.getElementById(target).innerHTML = data.nofLikes;
                    },
                    
                });            
        }
        

    </script>

